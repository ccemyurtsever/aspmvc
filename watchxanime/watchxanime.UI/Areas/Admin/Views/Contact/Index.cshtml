@model List<ResultContactDTO>
@{
    ViewData["Title"] = "İletişim Mesajları";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mx-auto">
    <!-- Header Section -->
    <div class="flex justify-between items-center mb-4">
        <h1 class="text-lg font-semibold text-white">@ViewData["Title"] Yönetimi</h1>
    </div>

    <!-- Messages Grid -->
    <div class="grid gap-3">
        @foreach (var item in Model)
        {
            <div class="bg-[#1a1a1a] rounded-md shadow-md hover:shadow-lg transition-all duration-200 hover:scale-[1.01] border border-gray-800/50 relative">
                <!-- Okunma Durumu İndikatörü -->
                @if (!item.IsRead)
                {
                    <div class="absolute top-4 right-4 w-2 h-2 rounded-full bg-amber-500 animate-pulse"></div>
                }
                <div class="p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <div class="flex items-center gap-2">
                                <h2 class="text-sm font-medium text-white mb-1">@item.NameLastname</h2>
                                @if (!item.IsRead)
                                {
                                    <span class="px-2 py-0.5 text-[10px] bg-amber-500/10 text-amber-500 rounded-full">Yeni</span>
                                }
                            </div>
                            <p class="text-gray-400 text-[11px]">@item.Email</p>
                        </div>
                        <span class="text-gray-400 text-[11px]">@item.CreatedAt.ToString("g")</span>
                    </div>

                    <div class="flex gap-2 mt-3">
                        <a asp-action="ContactDetail"
                           asp-controller="Contact"
                           asp-area="Admin"
                           asp-route-id="@item.ContactId"
                           class="flex-1 inline-flex justify-center items-center px-3 py-1.5 bg-amber-500/90 hover:bg-amber-500 text-white text-xs font-medium rounded transition-all duration-200 hover:scale-[1.02] group">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1.5 group-hover:rotate-12 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                            </svg>
                            Detaylar
                        </a>
                        @if (!item.IsRead)
                        {
                            <button onclick="markAsRead(@item.ContactId)" 
                                    class="flex-1 inline-flex justify-center items-center px-3 py-1.5 bg-emerald-500/90 hover:bg-emerald-500 text-white text-xs font-medium rounded transition-all duration-200 hover:scale-[1.02] group">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1.5 group-hover:rotate-12 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                Okundu İşaretle
                            </button>
                        }
                        <button onclick="showDeleteModal(this)"
                                data-id="@item.ContactId"
                                class="flex-1 inline-flex justify-center items-center px-3 py-1.5 bg-rose-500/90 hover:bg-rose-500 text-white text-xs font-medium rounded transition-all duration-200 hover:scale-[1.02] group">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1.5 group-hover:rotate-12 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                            Sil
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Delete Modal -->
<div id="deleteModal" class="fixed inset-0 bg-black/50 items-center justify-center hidden z-50">
    <div class="bg-[#1a1a1a] border border-red-900/30 rounded-lg w-[90%] max-w-md mx-auto p-4">
        <div class="text-center mb-4">
            <div class="w-16 h-16 rounded-full bg-red-500/10 mx-auto flex items-center justify-center mb-4">
                <i class="fas fa-exclamation-triangle text-2xl text-red-500"></i>
            </div>
            <h3 class="text-sm font-bold text-gray-100 mb-1">Silme Onayı</h3>
            <p class="text-[11px] text-gray-400">Bu mesajı silmek istediğinizden emin misiniz?</p>
        </div>
        <div class="flex gap-2 justify-center">
            <button onclick="confirmDelete()" class="px-4 py-1.5 bg-red-500 hover:bg-red-600 text-[11px] text-white rounded-md transition-colors duration-200">
                Evet, Sil
            </button>
            <button onclick="closeDeleteModal()" class="px-4 py-1.5 bg-[#0f0f0f] hover:bg-gray-900 text-[11px] text-gray-100 rounded-md transition-colors duration-200 border border-red-900/30">
                İptal
            </button>
        </div>
    </div>
</div>

<script>
    let currentDeleteId = null;

    function showDeleteModal(element) {
        currentDeleteId = element.getAttribute('data-id');
        document.getElementById('deleteModal').classList.remove('hidden');
        document.getElementById('deleteModal').classList.add('flex');
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').classList.add('hidden');
        document.getElementById('deleteModal').classList.remove('flex');
        currentDeleteId = null;
    }

    function confirmDelete() {
        if (currentDeleteId) {
            window.location.href = `/Admin/Contact/DeleteContact/${currentDeleteId}`;
        }
    }

    document.getElementById('deleteModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDeleteModal();
        }
    });

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && !document.getElementById('deleteModal').classList.contains('hidden')) {
            closeDeleteModal();
        }
    });

    function markAsRead(contactId) {
        fetch(`/Admin/Contact/MarkAsRead/${contactId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => {
            if (response.ok) {
                window.location.reload();
            } else {
                console.error('Mesaj okundu işaretlenemedi');
            }
        })
        .catch(error => {
            console.error('Bir hata oluştu:', error);
        });
    }
</script>

